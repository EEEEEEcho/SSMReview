<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
<!--    方式一:通过Spring的API接口实现动态代理-->
<!--    1.注入bean-->
    <bean id="userService" class="com.echo.UserServiceImpl"/>
    <bean id="beforeLog" class="com.log.BeforeLog"/>
    <bean id="afterLog" class="com.log.AfterLog"/>

<!--    2.在上述命名空间中配置AOP-->
<!--    3.配置AOP-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        配置切入点 expression:表达式，execution(要执行的位置)&ndash;&gt;-->
<!--&lt;!&ndash;        * com.echo.UserServiceImpl.*(..) 就是执行com.echo.UserServiceImpl.下的所有方法，任意参数&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.echo.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;        执行环绕增强&ndash;&gt;-->
<!--&lt;!&ndash;        这句话的意思就是，找到切入点pointcut,然后执行环绕增强beforeLog&ndash;&gt;-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

<!--    方式二：自定义类执行AOP-->
<!--    <bean id="diy" class="com.diy.DiyPointCut"/>-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        自定义切面，ref指向自定义的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--&lt;!&ndash;            切入点，代之要切入的类&ndash;&gt;-->
<!--            <aop:pointcut id="pointcut" expression="execution(* com.echo.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;            通知，代表要切入的方法&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="pointcut"/>-->
<!--            <aop:after method="after" pointcut-ref="pointcut"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->
<!--    <bean id="diy2" class="com.diy.DiyTwo"/>-->
<!--    <aop:config>-->
<!--        <aop:aspect ref="diy2">-->
<!--            <aop:pointcut id="pointcut" expression="execution(* com.echo.UserServiceImpl.*(..))"/>-->
<!--            <aop:before method="beforeExec" pointcut-ref="pointcut"/>-->
<!--            <aop:after method="afterExec" pointcut-ref="pointcut"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

<!--    方式三：使用注解定义切面-->
    <bean id="annotationPointCut" class="com.diy.AnnotationPointCut"/>
<!--    开启注解代理-->
    <aop:aspectj-autoproxy/>
</beans>